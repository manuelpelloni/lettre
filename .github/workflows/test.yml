name: Continuous integration

on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - 1.45.2

    steps:
      - uses: actions/checkout@v2
      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: |
          rustup update --no-self-update stable
          rustup component add rustfmt
      - run: sudo DEBIAN_FRONTEND=noninteractive apt-get update
      - run: sudo DEBIAN_FRONTEND=noninteractive apt-get -y install postfix
      - run: smtp-sink 2525 1000&
      
      - run: cargo install cargo-hack --debug
      - uses: actions-rs/cargo@v1
        with:
          command: hack
          args: test --each-feature
      
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

#  coverage:
#    name: Coverage
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions-rs/toolchain@v1
#        with:
#          toolchain: nightly
#          override: true
#      - run: sudo DEBIAN_FRONTEND=noninteractive apt-get -y install postfix
#      - run: smtp-sink 2525 1000&
#      - uses: actions-rs/cargo@v1
#        with:
#          command: test
#          args: --no-fail-fast
#        env:
#          CARGO_INCREMENTAL: "0"
#          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads"
#      - id: coverage
#        uses: actions-rs/grcov@v0.1
#      - name: Coveralls upload
#        uses: coverallsapp/github-action@master
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          path-to-lcov: ${{ steps.coverage.outputs.report }}